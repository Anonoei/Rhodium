[gcode_macro PRINT_START]
description: Called by slicer before starting print
variable_values: { 'BED': 0, 'HOTEND': 0, 'PURGING': 0 }
gcode:
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    OFF_IN T=0                        ; cancel off timer

    {% if printer.extruder.temperature + 5 < values.HOTEND %}
        PRINT_PREPARE
    {% else %}
        SET_HEATER HEATER=heater_bed TEMP={values.BED} WAIT=1
        SET_HEATER HEATER=extruder TEMP={values.HOTEND} WAIT=1
    {% endif %}

    _CLEAR_BUFFER
    # _EXTRUDE_RELATIVE
    # G0 E{CFG.print_prime} F150
    _SET_STATUS STATUS=printing

    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True

    _EXTRUDE_RELATIVE
    _POSITION_ABSOLUTE

    {% if CFG.print_purge %}
        LINE_PURGE
    {% else %}
        {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}    # Get all object points
        {% set print_x_min = (all_points | map(attribute=0) | min | default(0)) %}                          # Object x min
        {% set print_x_max = (all_points | map(attribute=0) | max | default(0)) %}                          # Object x max
        {% set print_y_min = (all_points | map(attribute=1) | min | default(0)) %}                          # Object y min
        {% set print_y_max = (all_points | map(attribute=1) | max | default(0)) %}                          # Object y max

        {% set print_x = (print_x_max + print_x_min)/2%}
        {% set print_y = (print_y_max + print_y_min)/2%}
        {% set print_z = CFG.print_start_z %}

        _LOG NAME="print.start.PRINT_START" MSG="Starting at X{print_x} Y{print_y} Z{print_z}"

        G0 X{print_x} Y{print_y} Z{print_z} F{CFG.print_start_speed * 60}
    {% endif %}
    _EXTRUDE_RELATIVE
    _POSITION_ABSOLUTE
    SET_CONFIG NAME=print_bed_clear TO=False SAVE=True

[gcode_macro PRINT_PREPARE]
description: Prepare to print
gcode:
    {% set SETTINGS = printer["gcode_macro PRINT_START"]["values"] %}
    {% set CFG = printer["gcode_macro _CONFIG"] %}

    {% set CURRENT_HOTEND_TEMP = printer.extruder.temperature|float %}
    {% set CURRENT_BED_TEMP = printer.heater_bed.temperature|float %}

    _LOG NAME="print.start.PRINT_PREPARE" MSG="Preparing for print! {SETTINGS.HOTEND}C/{SETTINGS.BED}C/{SETTINGS.CHAMBER}C (H/B/C)]" DISPLAY=1 NOTIFY=1
    BED_MESH_CLEAR

    # --- Heat the bed, if it's not heated, soak it
    SET_HEATER HEATER=heater_bed TEMP={SETTINGS.BED} WAIT=0 # Start heating bed
    {% if "xyz" in printer.toolhead.homed_axes %}
        PARK POS="CENTER"
    {% endif %}
    SET_HEATER HEATER=heater_bed TEMP={SETTINGS.BED} WAIT=1 # Wait for bed to reach temperature

    _LOG NAME="print.start.PRINT_PREPARE" MSG="Homing axes"
    G28

    {% if CFG.mesh %}
        {% if CFG.mesh_adaptive %}
            BED_MESH_CALIBRATE ADPATIVE=1
        {% else %}
            BED_MESH_PROFILE LOAD={CFG.mesh_name}
        {% endif %}
    {% endif %}
    PARK POS="CENTER"
    _LOG NAME="print.start.PRINT_PREPARE" MSG="Waiting for hotend to reach {SETTINGS.HOTEND}C..." DISPLAY=1
    SET_HEATER HEATER=extruder TEMP={SETTINGS.HOTEND} WAIT=1
    

[gcode_macro PRE_PRINT]
description: Called by slicer before calling PRINT_START
gcode:
    {% set BED_TEMP = params.BED_TEMP|float %}
    {% set HOTEND_TEMP = params.HOTEND_TEMP|float %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|float %}
    {% set PURGING = params.PURGING|default(1) %}
    {% set TOOL_MACRO = params.TOOL_MACRO|default(0) %}
    {% set LAYERS = params.LAYERS|default(-1)|int %}
    {% set LAYER_HEIGHT = params.LAYER_HEIGHT|default(-1)|float %}

    {% if not LAYERS == -1 %}
        SET_PRINT_STATS_INFO TOTAL_LAYER={LAYERS}
    {% endif %}

    {% set HEATSOAK = 0 %}
    {% set CURRENT_BED_TEMP = printer.heater_bed.temperature|float %}

    SET_HEATER HEATER=heater_bed TEMP={BED_TEMP} WAIT=0 # Set bed temp

    {% set VAL = {"BED": BED_TEMP, "HOTEND": HOTEND_TEMP, "PURGING": PURGING} %}
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=values VALUE="{VAL | pprint | replace("\n", "") | replace("\"", "\\\"")}"